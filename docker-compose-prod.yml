version: "3.9"

services: 
  mysql:
    build:  
      context: ./mysql
      dockerfile: Dockerfile
    image: gradereactjs_mysql
    container_name: mysql-gradereactjs
    volumes:
      - ./mysql/data:/var/lib/mysql
    networks:
      - gradereactjsnet
    environment: 
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
  nodejs:
    restart: on-failure
    build: 
      context: ./server
      dockerfile: Dockerfile
    image: gradereactjs_node
    volumes:
      - ./config/.env.nodejs-prod:/nodejs/.env
      - ./server/logs/pm2_output.log:/var/log/pm2_output.log
      - ./server/logs/pm2_error.log:/var/log/pm2_error.log
    depends_on: 
      - mysql
    links:
      - "mysql:mysql"
    ports: 
      - "8000:8000"
    container_name: node-gradereactjs
    networks:
      - gradereactjsnet
    environment: 
      - MYSQL_HOST=mysql
      - SESS_DOMAIN=${TEST_DOMAIN}
#      - SESS_DOMAIN=${MY_DOMAIN}
      - REACT_URL={HOST_URL}
      - REACT_WWW_URL={HOST_WWW_URL}
  reactjs:
    build: 
      context: ./client
      dockerfile: Dockerfile
    container_name: reactjs-gradereactjs
    volumes:
      - ./config/.env.react-prod:/reactjs/.env.production
      - react-build:/reactjs/build
    depends_on:
      - nodejs
    networks:
      - gradereactjsnet
    environment:
      - REACT_APP_API_URL=${HOST_URL}
  webserver:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-gradereactjs
    volumes:
      - ./nginx/conf_other/onlych.conf:/etc/nginx/conf.d/onlych.conf
      - ./nginx/logs:/var/www/logs
      - ./certbot/www:/var/www/certbot
      - ./certbot/data:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - react-build:/usr/share/nginx/html
    depends_on: 
      - reactjs
    ports: 
      - "80:80"
      #Enable for HTTPS
      - "443:443"
    links:
      - "nodejs:nodejs"
    networks:
      - gradereactjsnet
    environment: 
      - NGINX_DOM=${MY_DOMAIN}
      - NGINX_WWWDOM=${MY_WWW_DOMAIN}
      - CERT_PATH=${SSL_CERT_PATH}
      - CERTKEY_PATH=${SSL_CERTKEY_PATH}
      - CH_ONLY=${CH_ONLY}

#  certbot:
#    image: certbot/certbot
#    container_name: certbot
#    volumes:
#      - ./certbot/data:/etc/letsencrypt
#      - certbot-var:/var/lib/letsencrypt
#      - ./certbot/www:/var/www/certbot
#    depends_on: 
#      - webserver
#    command: certonly --webroot --webroot-path=/var/www/certbot --email ${CERT_EMAIL} --agree-tos --no-eff-email --staging -d ${MY_DOMAIN}  -d ${MY_WWW_DOMAIN}
    
volumes:
  certbot-var:
  react-build:

networks:
  gradereactjsnet:
    driver: bridge    


