version: "3.9"

services: 
  mysql:
    build:  
      context: ./mysql
      dockerfile: Dockerfile
    image: gradejs_mysql
    container_name: mysql-gradejs
    volumes:
      - ./mysql/data:/var/lib/mysql
    networks:
      - gradejsnet
    environment: 
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
  nodejs:
    restart: on-failure
    build: 
      context: ./nodejs
      dockerfile: Dockerfile
    image: gradejs_node
    volumes:
      - ./nodejs/logs/pm2_output.log:/var/log/pm2_output.log
      - ./nodejs/logs/pm2_error.log:/var/log/pm2_error.log
    depends_on: 
      - mysql
    links:
      - "mysql:mysql"
    ports: 
      - "8000:8000"
    container_name: node-gradejs
    networks:
      - gradejsnet
    environment: 
      - MYSQL_HOST=mysql
      - NODE_ENV=${NODE_ENV}
      - SID_SECRET=${SID_SECRET}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASS=${MYSQL_PASS}
      - MYSQL_DB=${MYSQL_DB}
#      - SESS_DOMAIN=${TEST_HOST}
      - SESS_DOMAIN=${MY_DOMAIN}      
  webserver:
    image: nginx:mainline-alpine
    container_name: nginx-gradejs
    volumes:
      - ./nginx/default.conf.template:/etc/nginx/conf.d/default.conf.template
      - ./nginx/conf_other/onlych.conf:/etc/nginx/conf.d/onlych.conf
      - ./nginx/logs:/var/www/logs
      - ./certbot/www:/var/www/certbot
      - ./certbot/data:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on: 
      - nodejs
    ports: 
      - "80:80"
      #Enable for HTTPS
#      - "443:443"
    networks:
      - gradejsnet
    environment: 
      - NGINX_DOM=${MY_DOMAIN}
      - NGINX_WWWDOM=${MY_WWW_DOMAIN}
      - CERT_PATH=${SSL_CERT_PATH}
      - CERTKEY_PATH=${SSL_CERTKEY_PATH}
      - CH_ONLY=${CH_ONLY}
    command: /bin/sh -c "envsubst '$$NGINX_DOM $$NGINX_WWWDOM $$CERT_PATH $$CERTKEY_PATH $$CH_ONLY' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/data:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on: 
      - webserver
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${CERT_EMAIL} --agree-tos --no-eff-email --staging -d ${MY_DOMAIN}  -d ${MY_WWW_DOMAIN}
    
volumes:
  certbot-var:

networks:
  gradejsnet:
    driver: bridge    


